import pandas as pd
from docx import Document

def generate_awr_report(parsed_awr, output_path):
    """Gera um relat√≥rio DOCX detalhado do AWR analisado, incluindo explica√ß√µes e recomenda√ß√µes baseadas nos dados reais extra√≠dos."""
    print("‚úÖ Gerando o relat√≥rio...")
    document = Document()
    document.add_heading("AWR Analysis Report", 0)
    
    # üîç CPU Usage
    document.add_heading("CPU Usage", level=1)
    cpu_data = parsed_awr.get("CPU Usage", [])
    if cpu_data and cpu_data[0] != "Se√ß√£o n√£o encontrada":
        for item in cpu_data:
            document.add_paragraph(f"üîπ Uso de CPU: {item}", style="List Bullet")
        document.add_paragraph("‚ö†Ô∏è Se o uso de CPU estiver alto, investigue SQLs pesados e revise estat√≠sticas de √≠ndices.")
    else:
        document.add_paragraph("‚ö†Ô∏è Dados de CPU n√£o encontrados no relat√≥rio AWR.")
    
    # üîç PGA Usage
    document.add_heading("PGA Usage", level=1)
    pga_data = parsed_awr.get("PGA Usage", [])
    if pga_data and pga_data[0] != "Se√ß√£o n√£o encontrada":
        for item in pga_data:
            document.add_paragraph(f"üîπ {item[0]}: {item[1]}", style="List Bullet")
        document.add_paragraph("‚ö†Ô∏è Se o uso de PGA estiver alto, ajuste `PGA_AGGREGATE_TARGET` e revise opera√ß√µes que utilizam alta mem√≥ria.")
    else:
        document.add_paragraph("‚ö†Ô∏è Dados de PGA n√£o encontrados no relat√≥rio AWR.")
    
    # üîç Wait Events
    document.add_heading("Wait Events", level=1)
    wait_events = parsed_awr.get("Wait Events", [])
    if wait_events and wait_events[0][0] != "Se√ß√£o n√£o encontrada":
        for event in wait_events:
            document.add_paragraph(f"üîπ Evento: {event[0]}, Tempo total: {event[1]}, Tipo: {event[2]}", style="List Bullet")
        document.add_paragraph("‚ö†Ô∏è Investigue se os eventos de espera indicam conten√ß√£o de I/O, locks ou problemas de CPU.")
    else:
        document.add_paragraph("‚ö†Ô∏è Nenhum evento de espera encontrado.")
    
    # üîç SQL Offenders
    document.add_heading("SQL Offenders", level=1)
    sql_offenders = parsed_awr.get("SQL Offenders", [])
    if sql_offenders and sql_offenders[0][0] != "Se√ß√£o n√£o encontrada":
        for sql in sql_offenders:
            document.add_paragraph(f"üîç SQL ID: {sql[6]}", style="List Bullet")
            document.add_paragraph(f"üëâ Query: {sql[8]}")
            document.add_paragraph(f"‚ö†Ô∏è Tempo de execu√ß√£o: {sql[0]}s, Execu√ß√µes: {sql[1]}")
            document.add_paragraph("‚úÖ Recomenda√ß√µes:")
            document.add_paragraph("- Utilize `EXPLAIN PLAN` e `DBMS_XPLAN.DISPLAY_CURSOR` para analisar gargalos.", style="List Bullet")
            document.add_paragraph("- Verifique √≠ndices e estat√≠sticas de tabelas (`DBMS_STATS.GATHER_TABLE_STATS`).", style="List Bullet")
            document.add_paragraph("- Avalie poss√≠veis reescritas de queries para otimizar os planos de execu√ß√£o.", style="List Bullet")
    else:
        document.add_paragraph("‚ö†Ô∏è Nenhum SQL cr√≠tico identificado.")
    
    # üîç ADDM Findings
    document.add_heading("ADDM Findings", level=1)
    addm_findings = parsed_awr.get("ADDM Findings", [])
    if addm_findings and addm_findings[0][0] != "Se√ß√£o n√£o encontrada":
        for finding in addm_findings:
            document.add_paragraph(f"üîπ Relat√≥rio: {finding[0]}, Impacto: {finding[1]}", style="List Bullet")
        document.add_paragraph("‚ö†Ô∏è Utilize `DBMS_ADVISOR.TUNE_SQL` para recomenda√ß√µes detalhadas.")
    else:
        document.add_paragraph("‚ö†Ô∏è Nenhuma recomenda√ß√£o ADDM encontrada.")
    
    # üìå Plano de A√ß√£o
    document.add_heading("Plano de A√ß√£o", level=1)
    document.add_paragraph("Baseado na an√°lise, siga estas recomenda√ß√µes:")
    document.add_paragraph("1Ô∏è‚É£ Revisar e otimizar queries ofensivas utilizando √≠ndices e estat√≠sticas atualizadas.", style="List Number")
    document.add_paragraph("2Ô∏è‚É£ Ajustar `SGA` e `PGA` conforme necessidade para evitar conten√ß√£o de mem√≥ria.", style="List Number")
    document.add_paragraph("3Ô∏è‚É£ Identificar eventos de espera e aplicar ajustes para reduzir bloqueios e conten√ß√£o de I/O.", style="List Number")
    document.add_paragraph("4Ô∏è‚É£ Revisar par√¢metros de paralelismo (`PARALLEL_EXECUTION_MESSAGE_SIZE`, `CPU_COUNT`) para otimizar workload.", style="List Number")
    
    # Salvando o relat√≥rio
    document.save(output_path)
    print(f"‚úÖ Relat√≥rio gerado com sucesso em: {output_path}")

    # üìö Links da Documenta√ß√£o
    document.add_heading("Oracle Documentation Links", level=1)
    oracle_docs = {
        "SQL Tuning": "https://docs.oracle.com/en/database/oracle/oracle-database/19/tgsql/",
        "Index Optimization": "https://docs.oracle.com/en/database/oracle/oracle-database/19/admin/managing-indexes.html",
        "Parallel Execution": "https://docs.oracle.com/en/database/oracle/oracle-database/19/dwhsg/parallel-execution.html"
    }
    for topic, link in oracle_docs.items():
        document.add_paragraph(f"{topic}: {link}", style="List Bullet")

    document.save(output_path)
    print(f"‚úÖ Relat√≥rio gerado com sucesso em: {output_path}")
